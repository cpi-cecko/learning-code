module Main where

import Data.Bits
import Text.Printf
import Data.Char (ord, chr)
import Numeric (showHex)
import System.Environment (getArgs)
import Control.Monad(when, mapM_)


listXOR :: [Int] -> [Int] -> [Int]
listXOR l1 l2 = zipWith xor l1 l2

hexToInt :: String -> [Int]
hexToInt (a:[]) = error "string must be of even length"
hexToInt [] = []
hexToInt (a:b:xs) = (read ("0x" ++ (a:[b])) :: Int) : hexToInt xs

prettyPrint :: [Int] -> String
prettyPrint = concatMap (`showHex` "")

binToString :: String -> String
binToString bin = map chr $ hexToInt bin

main :: IO ()
main = do
    args <- getArgs

    when (length args /= 2) $
        putStrLn "usage: <text1> <text2>"

    let text1 = hexToInt $ args !! 0
        text2 = hexToInt $ args !! 1
        xored = listXOR text1 text2
    putStrLn $ show xored
    mapM_ (printf "%02x") xored

bin1 = "030D4543120B4314041754021753070902454E1C1E58452548545B00021A1D06475114411D000708410E4F0E19051C00005F0E4E32134511411B53044C070745460A060D4F1F4F060D4554061403420A1C4354"

bin2 = "111D09450145141D1018444D15011C0306074C10535F4E3D071C4E541D121D4E094F16001B1D01451505450C1B15054510494301081316524155100A521A0D17001811164E084F1D0300171A181E54004E4E45"

bin3 = "000000001D0C0017450048040B1453003050A551D5371453211090151551A1A4E094F1600041152061314501706171A040244451C165606134E55171749020D45414B0916544D0014454615060217000C0F1116"

bin4 = "00000000100C131A000654081D075311150A441C105F44770A1C4E4155040C0F0C00044E10060B1515044F0D491104021D5E491A0D1B451E4F1A181600151B4547040A1D000C1C5206490400041C540A161745"

bin5 = "0D071000170A0D551154570C0B0753150845421C0A1A41771B001A001A15490D0652414B160D0145071F4F0E49114802075500190D1945015010100C4118011F451845104E4D1C06004118010F09000C0F1116"

bin6 = "00000052164502000054541A0A530718170053491C5C00341A1C1E541A141B0F174818005E54060D0019001401190B0D525B490209560E174505531645171A005418450A410B0A5203521B0541174F1A1C4309"

bin7 = "00000052164502000054541A0A530718170053491C5C003411151A4F1201081E0F595B001C1A174515054117491104091D5B534E111E0052671A0500521A05004E1F450D4F4D1A010000161A141A454F080C17"

bin8 = "030D4543120B4301001100190D165311080C4E1D534D48321A004E541D16490D0F4911001A0752100F0541131909480C140C414E12040A1C4755110C5454011600180017544D0E1C010017070F1D55020B1045"

bin9 = "15484D50010C151311110D06000A5A4147004E0A01435023010A00000610010B0A45415307150600124D1343081C0F0A00455406080549524E141E004C0D4804001B171643080B071745540E0E1C00080B0D00"

bin10 = "743C0D4553260C1C061D5308453C0B070817442D1A59543E070B0F520C53415C571057095310178ACDEC4E061A500B170B5C540145171652541D164541061C454F0D4559571F06060C4E13480E4E524F1D0C09"
